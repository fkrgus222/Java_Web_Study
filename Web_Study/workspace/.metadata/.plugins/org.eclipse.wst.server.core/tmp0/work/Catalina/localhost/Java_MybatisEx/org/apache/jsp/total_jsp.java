/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.41
 * Generated at: 2021-10-21 08:11:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import mybatis.vo.EmpVO;
import mybatis.dao.EmpDAO;
import java.util.List;

public final class total_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("mybatis.dao.EmpDAO");
    _jspx_imports_classes.add("mybatis.vo.EmpVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("<!-- 자바 클래스 임포트 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>total 페이지</title>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\ttable{\r\n");
      out.write("\t\twidth : 500px;\r\n");
      out.write("\t\tborder-collapse : collapse;\r\n");
      out.write("\t}\r\n");
      out.write("\ttable, table, th, table > body td{\r\n");
      out.write("\t\tborder : 1px solid black;\r\n");
      out.write("\t\tpadding : 4px;\r\n");
      out.write("\t}\r\n");
      out.write("\ttable thead>tr:first-child>th {\r\n");
      out.write("\t\tborder : 0px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#add_win{\r\n");
      out.write("\t\twidth : 200px;\r\n");
      out.write("\t\tborder : 1px solid black;\r\n");
      out.write("\t\tbackground-color : #fff;\r\n");
      out.write("\t\tposition : absolute;\r\n");
      out.write("\t\ttop : 100px;\r\n");
      out.write("\t\tleft : 500px;\r\n");
      out.write("\t\tdisplay : none;\r\n");
      out.write("\t}\r\n");
      out.write("\t#add_win input[type=text]{\r\n");
      out.write("\t\twidth : 90px;\r\n");
      out.write("\t\tpadding : 3px;\r\n");
      out.write("\t\tborder : 1px solid black;\r\n");
      out.write("\t\tmargin-bottom : 5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<header>\r\n");
      out.write("\t\t<h1>사원 목록</h1>\r\n");
      out.write("\t</header>\r\n");
      out.write("\t<article>\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<caption>사람들의 목록을 위한 테이블</caption>\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th collapse = \"3\" style = \"text-align:right;\">\r\n");
      out.write("\t\t\t\t\t\t<input type = \"button\" value = \"사원추가\" id = \"add_btn\" onclick = \"addFun()\"/>\r\n");
      out.write("\t\t\t\t\t</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th bgcolor =\"orange\">사원번호</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor =\"orange\">사원명</th>\r\n");
      out.write("\t\t\t\t\t<th bgcolor =\"orange\">직책</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t");

					List<EmpVO> list = EmpDAO.getTotal();
				
					if(list != null && list.size() > 0){
						for(EmpVO vo : list){
				
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print( vo.getEmpno() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print( vo.getEname() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print( vo.getPosition() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

						}
					}
			    
      out.write("\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</article>\r\n");
      out.write("\r\n");
      out.write("\t<div id = \"add_win\">\r\n");
      out.write("\t\t<header>\r\n");
      out.write("\t\t\t<h2>사원 추가</h2>\r\n");
      out.write("\t\t</header>\r\n");
      out.write("\t\t<div id = \"body\">\r\n");
      out.write("\t\t\t<form method = \"POST\" action = \"add.jsp\">\r\n");
      out.write("\t\t\t\t<label for = \"empno\">사원번호</label>\r\n");
      out.write("\t\t\t\t<input type = \"text\" id = \"empno\" name= \"empno\"/>\r\n");
      out.write("\t\t\t\t<br/>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<label for = \"ename\">사원명</label>\r\n");
      out.write("\t\t\t\t<input type = \"text\" id = \"ename\" name= \"ename\"/>\r\n");
      out.write("\t\t\t\t<br/>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<label for = \"position\">직책</label>\r\n");
      out.write("\t\t\t\t<input type = \"text\" id = \"position\" name= \"position\"/>\r\n");
      out.write("\t\t\t\t<br/><br/>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<input type =\"button\" value = \"추가\" id = \"appends_btn\" onclick = \"sendData()\" />\r\n");
      out.write("\t\t\t\t<input type =\"button\" value = \"취소\" id = \"cancel_btn\" onclick = \"closeWin()\" />\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t<br/>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction addFun(){\r\n");
      out.write("\t\tvar addwin = document.getElementById(\"add_win\");\r\n");
      out.write("\t\taddwin.style.display = \"block\";\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\tfunction sendData(){\r\n");
      out.write("\t\tvar empno = document.getElementById(\"empno\").value;\r\n");
      out.write("\t\tvar ename = document.getElementById(\"ename\").value;\r\n");
      out.write("\t\tvar position = document.getElementById(\"position\").value;\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(empno.trim().length < 1){\r\n");
      out.write("\t\t\t//한자도 입력하지 않은 경우\r\n");
      out.write("\t\t\tdocument.getElementById(\"empno\").value = \"\";\r\n");
      out.write("\t\t\talert(\"사원번호를 입력하세요\");\r\n");
      out.write("\t\t\tdocument.getElementById(\"empno\").focus();\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//submit객체를 누르는것과 같은효과\r\n");
      out.write("\t\tdocument.forms[0].submit();\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\tfunction closeWin(){\r\n");
      out.write("\t\tvar addwin = document.getElementById(\"add_win\");\r\n");
      out.write("\t\taddwin.style.display = \"none\";\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
